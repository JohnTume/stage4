{"ast":null,"code":"var _jsxFileName = \"/homes/iws/wd1204/Desktop/stage4/src/commentConnect/CommentsContainer.js\";\nimport React, { Component } from 'react';\nimport CommentBox from './CommentBox';\nimport Comments from './Comments';\nimport './style.css';\n\nclass CommentsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAddComment = this.handleAddComment.bind(this);\n    this.state = {\n      loading: false,\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    /* global Ably */\n    const channel = Ably.channels.get('comments');\n    channel.attach();\n    setTimeout(() => {\n      this.setState({\n        loading: true\n      });\n    }, this.setState({\n      loading: false\n    }));\n    channel.once('attached', () => {\n      channel.history((err, page) => {\n        /* create a new array with comments */\n        const comments = Array.from(page.items, item => item.data);\n        this.setState({\n          comments\n        });\n        /* subscribe to new comments */\n\n        channel.subscribe((msg, err) => {\n          const commentObject = msg['data'];\n          this.handleAddComment(commentObject);\n        });\n      });\n    });\n  }\n\n  handleAddComment(comment) {\n    this.setState(prevState => {\n      return {\n        comments: [comment].concat(prevState.comments)\n      };\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? React.createElement(Spinner, {\n      animation: \"grow\",\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : React.createElement(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-half is-offset-one-quarter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"graphics\",\n      src: require('./iconAsset/connect_graphic.svg'),\n      alt: \"icon for user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(CommentBox, {\n      className: \"comment_form\",\n      handleAddComment: this.handleAddComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      comments: this.state.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default CommentsContainer;","map":{"version":3,"sources":["/homes/iws/wd1204/Desktop/stage4/src/commentConnect/CommentsContainer.js"],"names":["React","Component","CommentBox","Comments","CommentsContainer","constructor","props","handleAddComment","bind","state","loading","comments","componentDidMount","channel","Ably","channels","get","attach","setTimeout","setState","once","history","err","page","Array","from","items","item","data","subscribe","msg","commentObject","comment","prevState","concat","render","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CommentBox from './CommentBox';\nimport Comments from './Comments';\nimport './style.css';\n\nclass CommentsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddComment = this.handleAddComment.bind(this);\n    this.state = {\n      loading: false,\n      comments: []\n    }\n  }\n\n  componentDidMount() {\n    /* global Ably */\n    const channel = Ably.channels.get('comments');\n    \n   \n    channel.attach();\n    setTimeout(() => { \n      this.setState({loading: true})\n    },  this.setState({loading: false}));\n\n      channel.once('attached', () => {\n        channel.history((err, page) => {\n          /* create a new array with comments */\n          const comments = Array.from(page.items, item => item.data);\n\n          this.setState({ comments });\n\n          /* subscribe to new comments */\n          channel.subscribe((msg, err) => {\n            const commentObject = msg['data'];\n            this.handleAddComment(commentObject);\n          });\n        });\n      });\n  }\n\n  handleAddComment(comment) {\n    this.setState(prevState => {\n      return {\n        comments: [comment].concat(prevState.comments)\n      };\n    });\n  }\n\n  render() {\n    return(\n    this.state.loading === true ? <Spinner animation=\"grow\" variant=\"info\" /> : \n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-half is-offset-one-quarter\">\n            <img className='graphics' src={require('./iconAsset/connect_graphic.svg')} alt=\"icon for user\" />\n              <CommentBox className='comment_form'handleAddComment={this.handleAddComment} />\n              <Comments comments={this.state.comments} />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nexport default CommentsContainer;"]},"metadata":{},"sourceType":"module"}